<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wesley Stratton</title>
    <link>https://stratton.dev/</link>
    <description>Recent content on Wesley Stratton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Jun 2019 13:35:13 -0700</lastBuildDate>
    
	<atom:link href="https://stratton.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring Dependency Injection</title>
      <link>https://stratton.dev/23-06-2019-spring-dependency-injection/</link>
      <pubDate>Sun, 23 Jun 2019 13:35:13 -0700</pubDate>
      
      <guid>https://stratton.dev/23-06-2019-spring-dependency-injection/</guid>
      <description>There are three ways to inject dependencies into beans in Spring, listed below. In this post we&amp;rsquo;ll quickly go over the three ways of injection.
 Constructor Setter Field  Constructor-based injection Constructor-based injection is typically the best way to go about injecting dependencies into beans. With constructor-based injection we&amp;rsquo;re able to enforce two main ideas,
 Missing consturctor-based beans will cause a BeanDefinitionException if the dependency is missing We&amp;rsquo;re able to make all constructor-based beans threadsafe by assigning them as private final class variables (more on this in a later blog post).</description>
    </item>
    
    <item>
      <title>Static Website Analytics</title>
      <link>https://stratton.dev/02-06-2019-static-website-analytics/</link>
      <pubDate>Sun, 02 Jun 2019 11:11:40 -0700</pubDate>
      
      <guid>https://stratton.dev/02-06-2019-static-website-analytics/</guid>
      <description>In this post we&amp;rsquo;re going to build a simple serverless self-hosted analytics system. This is the simple set-up that I currently use to track visitors to my website. We&amp;rsquo;ll use a few simple tools to track visitors of our websites.
Overview The tools and services we&amp;rsquo;re going to use to build our simple analytics are:
 Golang Serverless framework AWS Lambda AWS Cloudwatch Javascript  Golang/AWS Lambda/Serverless Framework To get things off the ground we want to implement a lambda function that we can hit when someone vists our website.</description>
    </item>
    
    <item>
      <title>Go Basic Sessions</title>
      <link>https://stratton.dev/28-05-2019-go-basic-sessions/</link>
      <pubDate>Mon, 27 May 2019 23:25:28 -0700</pubDate>
      
      <guid>https://stratton.dev/28-05-2019-go-basic-sessions/</guid>
      <description>When a user logs into any applicaiton, their authorizaiton has to be persisted otherwise they will be required to re-authenticate with every request. One of the ways to accomplish this is to store a users &amp;ldquo;session&amp;rdquo;.
A session is started once a user logs in and expires either after a specific time delay or on logout. Each logged in user and device has a unique session reference, or id, that is sent with every request the user makes after they are authenticated.</description>
    </item>
    
    <item>
      <title>Aboot</title>
      <link>https://stratton.dev/aboot/</link>
      <pubDate>Thu, 23 May 2019 00:22:41 -0700</pubDate>
      
      <guid>https://stratton.dev/aboot/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Moose</title>
      <link>https://stratton.dev/23-05-2019-moose/</link>
      <pubDate>Thu, 23 May 2019 00:18:23 -0700</pubDate>
      
      <guid>https://stratton.dev/23-05-2019-moose/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>